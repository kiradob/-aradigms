# ● Контекст
# Предположим, что мы хотим найти элемент в массиве (получить его индекс). Мы можем это сделать просто перебрав все элементы.
# Но что, если массив уже отсортирован? В этом случае можно использовать бинарный поиск. Принцип прост: сначала берём
# элемент находящийся посередине и сравниваем с тем, который мы хотим найти. Если центральный элемент больше нашего,
# рассматриваем массив слева от центрального, а если больше - справа и повторяем так до тех пор, пока не найдем наш элемент.
# ● Ваша задача Написать программу на любом языке в любой парадигме для бинарного поиска. На вход подаётся целочисленный массив и
# число. На выходе - индекс элемента или -1, в случае если искомого элемента нет в массиве.



def binary_search(arr, target):
    low = 0
    high = len(arr) - 1

    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1

    return -1

# Пример использования
arr = [2, 5, 6, 8, 10, 11, 14, 16, 18, 20]
target = 11

index = binary_search(arr, target)
if index != -1:
    print("Искомый элемент найден в массиве на индексе", index)
else:
    print("Искомый элемент не найден в массиве")


# Программа начинает с инициализации переменных low и high, которые представляют собой начальный и конечный индексы массива. 
# Затем используется цикл while, который выполняется, пока low не станет больше high. Внутри цикла вычисляется 
# середина массива (mid) путем деления суммы low и high на 2.

# Затем происходит сравнение элемента по индексу mid с искомым элементом. Если элементы совпадают, то возвращается 
# индекс mid. Если значение в arr[mid] меньше искомого значения, то значение low обновляется на mid + 1 для поиска 
# справа от середины. Если значение arr[mid] больше искомого значения, то значение high обновляется на mid - 1 для 
# поиска слева от середины.

# Если цикл завершается и не найден искомый элемент, то возвращается -1.

# Бинарный поиск предполагает, что массив является отсортированным. Если массив не отсортирован, то результаты будут 
# непредсказуемыми, и поиск может быть некорректным.